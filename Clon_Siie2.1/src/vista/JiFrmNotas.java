/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import clases.ConexionBD;

import javax.swing.table.DefaultTableModel;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class JiFrmNotas extends javax.swing.JInternalFrame {

    private final String alumno; 
    private int alumnoId;  

    public JiFrmNotas(String alumno) {
        initComponents();
        this.alumno = alumno;
        this.getContentPane().setBackground(new Color(214, 245, 255));

        cargarIdAlumno(); 
        cargarNotas();    
    }

    
    private void cargarIdAlumno() {
        String sql = "SELECT id FROM Alumnos WHERE nombre = ?";
        try (Connection conn = ConexionBD.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, alumno);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                alumnoId = rs.getInt("id");
            } else {
                alumnoId = -1; // si no lo encuentra
            }
        } catch (Exception e) {
            e.printStackTrace();
            alumnoId = -1;
        }
    }


    // CARGAR NOTAS DEL ALUMNO
    private void cargarNotas() {
        DefaultTableModel modeloNotas = new DefaultTableModel(
                new Object[]{"Materia", "Corte 1", "Corte 2", "Corte 3", "Promedio"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        String[] materias = {"Java", "Poo", "Materias_net"};

        double sumaNotas = 0;
        int cantidadNotas = 0;

        if (alumnoId == -1) {
            lblPromedio.setText("No se encontrÃ³ el alumno.");
            tablaNotas.setModel(modeloNotas);
            return;
        }

        try (Connection conn = ConexionBD.getConnection()) {
            for (String mat : materias) {
                double[] notas = new double[3];
                double sumaMateria = 0;
                int cantidadCortes = 0;

                String sql = "SELECT corte, nota FROM `" + mat + "` WHERE alumno_id = ?";
                try (PreparedStatement stmt = conn.prepareStatement(sql)) {
                    stmt.setInt(1, alumnoId);
                    ResultSet rs = stmt.executeQuery();

                    while (rs.next()) {
                        int corte = rs.getInt("corte");
                        double nota = rs.getDouble("nota");
                        if (corte >= 1 && corte <= 3) {
                            notas[corte - 1] = nota;
                            sumaMateria += nota;
                            cantidadCortes++;
                            sumaNotas += nota;
                            cantidadNotas++;
                        }
                    }
                }

                // Solo mostrar si tiene notas cargadas
                if (cantidadCortes > 0) {
                    double promedioMateria = sumaMateria / cantidadCortes;
                    modeloNotas.addRow(new Object[]{
                            mat.toUpperCase(),
                            notas[0],
                            notas[1],
                            notas[2],
                            String.format("%.2f", promedioMateria)
                    });
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        tablaNotas.setModel(modeloNotas);

        if (cantidadNotas > 0) {
            double promedio = sumaNotas / cantidadNotas;
            lblPromedio.setText("Promedio general: " + String.format("%.2f", promedio));
        } else {
            lblPromedio.setText("El alumno no tiene notas registradas.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaNotas = new javax.swing.JTable();
        lblPromedio = new javax.swing.JLabel();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        tablaNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaNotas);

        lblPromedio.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lblPromedio.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPromedio, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPromedio))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPromedio;
    private javax.swing.JTable tablaNotas;
    // End of variables declaration//GEN-END:variables
}
