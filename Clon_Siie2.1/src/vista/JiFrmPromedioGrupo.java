/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import clases.Base_De_Datos;
import clases.ConexionBD;

import javax.swing.table.DefaultTableModel;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

public class JiFrmPromedioGrupo extends javax.swing.JInternalFrame {

    private final Base_De_Datos baseDatos = new Base_De_Datos(); 
    private final String docente; 
    private String tablaNotasMateria; // 👈 aquí se guarda la tabla de notas correspondiente

    public JiFrmPromedioGrupo(String docente) {
        initComponents();
        this.docente = docente;
        this.getContentPane().setBackground(new Color(214, 245, 255));

        // Detectar qué tabla de notas usar
        this.tablaNotasMateria = obtenerTablaNotasMateria();
        cargarPromedios();
    }

   
     private String obtenerTablaNotasMateria() {
        String materia = null;
        String sql = "SELECT m.materia FROM Materias m "
                   + "INNER JOIN Docentes d ON m.docente_id = d.id "
                   + "WHERE d.nombre = ? LIMIT 1";

        try (Connection conn = ConexionBD.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, docente);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                materia = rs.getString("materia");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        if (materia == null || materia.equalsIgnoreCase("sin asignatura")) {
            JOptionPane.showMessageDialog(this, "❌ El docente no tiene materia asignada.");
            return null;
        }

        switch (materia.toLowerCase()) {
            case "java": return "Java";
            case "poo": return "Poo";
            case "materias_net": return "Materias_net";
            default:
                JOptionPane.showMessageDialog(this, "❌ La materia '" + materia + "' no tiene tabla de notas definida.");
                return null;
        }
    }

    /**
     * Cargar los promedios por estudiante y el promedio general del grupo
     */
    private void cargarPromedios() {
        DefaultTableModel modelo = new DefaultTableModel(
            new Object[]{"Estudiante", "Promedio"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // 👈 tabla solo de lectura
            }
        };

        double sumaGeneral = 0;
        int cantidadEstudiantes = 0;

        if (tablaNotasMateria == null) {
            tablaNotas.setModel(modelo);
            lbPromedio.setText("N/A");
            return;
        }

        String sqlNotas = "SELECT a.nombre, a.apellido, AVG(n.nota) AS promedio " +
                          "FROM Alumnos a " +
                          "LEFT JOIN " + tablaNotasMateria + " n ON a.id = n.alumno_id " +
                          "GROUP BY a.id, a.nombre, a.apellido";

        try (Connection conn = ConexionBD.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sqlNotas);
             ResultSet rs = stmt.executeQuery()) {

            while (rs.next()) {
                String estudiante = rs.getString("nombre") + " " + rs.getString("apellido");
                double promedio = rs.getDouble("promedio");

                if (rs.wasNull()) {
                    promedio = 0.0; // si no tiene notas → 0
                }

                modelo.addRow(new Object[]{
                    estudiante,
                    String.format("%.2f", promedio)
                });

                sumaGeneral += promedio;
                cantidadEstudiantes++;
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        tablaNotas.setModel(modelo);

        if (cantidadEstudiantes > 0) {
            double promedioGrupo = sumaGeneral / cantidadEstudiantes;
            lbPromedio.setText(String.format("%.2f", promedioGrupo));
        } else {
            lbPromedio.setText("N/A");
        }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaNotas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lbPromedio = new javax.swing.JLabel();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        tablaNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaNotas);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel1.setText("promedio del grupo:");

        lbPromedio.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lbPromedio.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(lbPromedio)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lbPromedio))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbPromedio;
    private javax.swing.JTable tablaNotas;
    // End of variables declaration//GEN-END:variables
}
